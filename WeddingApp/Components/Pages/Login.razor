@using WeddingApp.Entities
<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
        @if(LoginMessage != null)
        {
            <div><h3>@LoginMessage.Item2</h3></div>
        }
        <EditForm Model="@userEntityModel" OnValidSubmit="@(() => SignIn.InvokeAsync(userEntityModel))" FormName="LoginForm" Context="formContext">
            <DataAnnotationsValidator />
            <div class="mb-3">
                <label>Imię</label>
                <InputText @bind-Value="userEntityModel.UserName" class="form-control" placeholder="Imię" />
                <ValidationMessage For="() => userEntityModel.UserName" />
            </div>
            <div class="mb-3">
                <label>
                    Numer telefonu - jeśli nie chcesz podać swojego numeru, wpisz losową liczbę
                    (zapamiętaj ją, aby później móc usuwać wcześniej dodane zdjęcia)
                </label>
                <InputText @bind-Value="userEntityModel.UserPhone" class="form-control" placeholder="Numer telefonu" />
                <ValidationMessage For="() => userEntityModel.UserPhone" />
            </div>
            <div class="mb-3 d-grid gap-2">
                <button type="submit" class="btn btn-primary">Zaloguj</button>
            </div>
        </EditForm>
    </div>
</div>

@code {

    [SupplyParameterFromForm]
    public UserEntity userEntityModel { get; set; } = new UserEntity();

    [Parameter]
    public EventCallback<UserEntity> SignIn { get; set; }

    [Parameter]
    public Tuple<bool, string> LoginMessage { get; set; }
}