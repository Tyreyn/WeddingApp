@using WeddingApp.Entities


<EditForm Model="@userEntityModel" OnValidSubmit="@(() => SignIn.InvokeAsync(userEntityModel))" FormName="LoginForm" Context="formContext">
    <DataAnnotationsValidator />
    <MudGrid Justify="Justify.Center">
        @if (LoginMessage != null)
        {
            <MudItem>
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                    <MudText Color="Color.Error">@LoginMessage.Item2</MudText>
                    </MudPaper>
                </MudItem>
        }
        <MudItem Style="display:flex;">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Imię"
                                  @bind-Value="userEntityModel.UserName" For="@(() => userEntityModel.UserName)" OnlyValidateIfDirty="true" />
                    <MudTextField Label="Numer telefonu" Class="mt-3" HelperText="Jeśli nie chcesz podawać nr.
                                    telefonu podaj losową liczbę i ją zapamiętaj.
                                    Pozwoli Ci ona na późniejsze ponowne zalogowanie
                                    się i przejrzenie zdjęć, które już wcześniej przesłałeś."
                                  HelperTextOnFocus="true" Variant="Variant.Text"
                                  @bind-Value="userEntityModel.UserPhone" For="@(() => userEntityModel.UserPhone)" OnlyValidateIfDirty="true" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Zaloguj</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>


@code {

    [SupplyParameterFromForm]
    public UserEntity userEntityModel { get; set; } = new UserEntity();

    [Parameter]
    public EventCallback<UserEntity> SignIn { get; set; }

    [Parameter]
    public Tuple<bool, string> LoginMessage { get; set; }
}